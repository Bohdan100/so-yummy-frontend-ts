{"version":3,"file":"static/js/924.996c9847.chunk.js","mappings":"8TAiJA,EArI2B,WACzB,IAAsBA,GAAaC,EAAAA,EAAAA,MAA3BC,aACR,GAAgCC,EAAAA,EAAAA,UAAS,GAAE,eAApCC,EAAQ,KAAEC,EAAW,KAC5B,GAAoCF,EAAAA,EAAAA,UAAmB,IAAG,eAAnDG,EAAU,KAAEC,EAAa,KAChC,GAA0BJ,EAAAA,EAAAA,UAAwB,MAAK,eAAhDK,EAAK,KAAEC,EAAQ,KACtB,GAAkCN,EAAAA,EAAAA,WAAS,GAAM,eAA1CO,EAAS,KAAEC,EAAY,KACxBC,GAAWC,EAAAA,EAAAA,MACTC,GAAMC,EAAAA,EAAAA,MAAND,GAERE,EAAAA,EAAAA,YAAU,WACuB,aAoB9B,OApB8B,0BAA/B,+FAEuB,OAFvB,SAEIL,GAAa,GAAM,SACcM,EAAAA,KAAyB,KAAD,WAAjDC,EAAc,EAAdA,eAERX,EAAcW,GACVlB,IACImB,EACJnB,EAAS,GAAGoB,cAAgBpB,EAASqB,MAAM,IACvCC,EAAkBJ,EAAeK,QAAQJ,IACzB,GAAGd,EAAYiB,IACtC,kDAEG,gBAAiBE,QACnBf,EAAS,KAAMgB,SACfC,EAAAA,GAAAA,MAAYZ,EAAE,0BACf,QAEmB,OAFnB,UAEDH,GAAa,GAAO,8EAEvB,uBArBc,WACgB,wBAqB/BgB,EACF,GAAG,CAAC3B,EAAUc,KAEdE,EAAAA,EAAAA,YAAU,WACR,GAAIV,EAAWsB,OAAS,EAAG,CACzB,IACMC,EAD2BvB,EAAWF,GACU0B,cACtDlB,EAAS,eAAD,OAAgBiB,GAC1B,CACF,GAAG,CAACvB,EAAYM,EAAUR,IAO1B,OACE,gCACGM,IAAa,SAACqB,EAAA,EAAM,IACpBzB,IACC,0BACE,SAAC0B,EAAA,EAAI,CACHC,MAAO7B,EACP8B,SAZW,SAACC,EAA0BC,GAC9CxB,EAAS,eAAD,OAAgBN,EAAW8B,KACnC/B,EAAY+B,EACd,EAUUC,QAAQ,aACRC,cAAc,OACd,aAAW,+BACXC,GAAI,CACFC,UAAW,OAEX,4BAA6B,CAC3BA,UAAW,QAEb,6BAA8B,CAC5BA,UAAW,SAGb,sBAAuB,CACrB,mCAAoC,CAClCC,gBAAiB,WAEnB,gBAAiB,CAAEA,gBAAiB,WACpCC,WAAY,yCACZC,UAAW,OACXC,eAAgB,OAChB,uBAAwB,CACtBC,QAAS,SAGb,2BAA4B,CAC1BH,WAAY,yCACZI,IAAK,OACL,4BAA6B,CAC3BA,IAAK,QAEP,WAAY,CACVC,MAAO,YAIX,iBAAkB,CAChBC,cAAe,aACfC,SAAU,QACVC,SAAU,OACVC,WAAY,UACZC,WAAY,MACZC,WAAY,OACZC,YAAa,UACbZ,WAAY,0CAGd,QAAS,CACPa,QAAS,GACTC,OAAQ,UACRC,YAAa,MACbf,WAAY,2CAEd,SAEDpC,EAAWoD,KAAI,SAAC1D,EAAkB2D,GACjC,OACE,SAACC,EAAA,EAAG,CACFC,MAAO7D,EAAS8B,cAEhBS,GAAI,CACFuB,QAAS,IACTf,MAAO,UACP,iBAAkB,CAChBA,MAAO,aALNY,EAUX,QAILnD,IAAS,SAACuD,EAAA,EAAa,UAAEjD,EAAE,gCAGlC,E,oBCpHA,EAlB2B,WACzB,IAAQA,GAAMC,EAAAA,EAAAA,MAAND,EAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRgD,EAAAA,EAAAA,IACF,GAAG,KAGD,UAACC,EAAA,EAAa,YACZ,SAACC,EAAA,EAAa,UAAEpD,EAAE,2BAClB,SAAC,EAAc,KACf,SAAC,EAAAqD,SAAQ,CAACC,UAAU,SAACrC,EAAA,EAAM,IAAI,UAC7B,SAAC,KAAM,QAIf,C","sources":["components/CategoriesByName/CategoriesList/CategoriesList.tsx","pages/CategoriesPage/CategoriesPage.tsx"],"sourcesContent":["import { FC, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router';\nimport { useParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\n\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport { toast } from 'react-toastify';\nimport * as API from 'services/categories-API';\nimport NotFoundWrapp from 'components/ReusableComponents/NotFoundWrapp';\nimport Loader from 'components/Loader';\n\nconst CategoriesList: FC = () => {\n  const { categoryName: category } = useParams<string>();\n  const [tabValue, setTabValue] = useState(0);\n  const [categories, setCategories] = useState<string[]>([]);\n  const [error, setError] = useState<string | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    async function getAllCategories() {\n      try {\n        setIsLoading(true);\n        const { categoriesList } = await API.fetchAllCategories();\n\n        setCategories(categoriesList);\n        if (category) {\n          const categoryCapitalize =\n            category[0].toUpperCase() + category.slice(1);\n          const indexOfCategory = categoriesList.indexOf(categoryCapitalize);\n          if (indexOfCategory > 0) setTabValue(indexOfCategory);\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          setError(error.message);\n          toast.error(t('categoriesList.error'));\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getAllCategories();\n  }, [category, t]);\n\n  useEffect(() => {\n    if (categories.length > 0) {\n      const navigateCategory: string = categories[tabValue];\n      const lowercaseNavCategory: string = navigateCategory.toLowerCase();\n      navigate(`/categories/${lowercaseNavCategory}`);\n    }\n  }, [categories, navigate, tabValue]);\n\n  const handleChange = (e: React.ChangeEvent<{}>, newCategory: number) => {\n    navigate(`/categories/${categories[newCategory]}`);\n    setTabValue(newCategory);\n  };\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {categories && (\n        <div>\n          <Tabs\n            value={tabValue}\n            onChange={handleChange}\n            variant=\"scrollable\"\n            scrollButtons=\"auto\"\n            aria-label=\"scrollable auto tabs example\"\n            sx={{\n              marginTop: '50px',\n\n              '@media (min-width: 768px)': {\n                marginTop: '72px',\n              },\n              '@media (min-width: 1440px)': {\n                marginTop: '100px',\n              },\n\n              '& .MuiTabs-scroller': {\n                '& .css-1aquho2-MuiTabs-indicator': {\n                  backgroundColor: '#8BAA36',\n                },\n                '& .css-ttwr4n': { backgroundColor: '#8BAA36' },\n                transition: 'all 250ms cubic-bezier(0.4, 0, 0.2, 1)',\n                overflowX: 'auto',\n                scrollbarWidth: 'none',\n                '&::-webkit-scrollbar': {\n                  display: 'none',\n                },\n              },\n              '& .MuiTabs-flexContainer': {\n                transition: 'all 250ms cubic-bezier(0.4, 0, 0.2, 1)',\n                gap: '28px',\n                '@media (min-width: 768px)': {\n                  gap: '55px',\n                },\n                '& :hover': {\n                  color: '#8BAA36',\n                },\n              },\n\n              '& .MuiTab-root': {\n                textTransform: 'capitalize',\n                minWidth: 'unset',\n                fontSize: '18px',\n                fontFamily: 'Poppins',\n                fontWeight: '400',\n                lineHeight: '18px',\n                borderColor: '#8BAA36',\n                transition: 'all 250ms cubic-bezier(0.4, 0, 0.2, 1)',\n              },\n\n              '& svg': {\n                opacity: 0.8,\n                stroke: '#8BAA36',\n                strokeWidth: '3px',\n                transition: 'all 250ms cubic-bezier(0.4, 0, 0.2, 1)',\n              },\n            }}\n          >\n            {categories.map((category: string, idx: number) => {\n              return (\n                <Tab\n                  label={category.toLowerCase()}\n                  key={idx}\n                  sx={{\n                    padding: '0',\n                    color: '#BDBDBD',\n                    '&.Mui-selected': {\n                      color: '#8BAA36',\n                    },\n                  }}\n                />\n              );\n            })}\n          </Tabs>\n        </div>\n      )}\n      {error && <NotFoundWrapp>{t('categoriesList.errorText')}</NotFoundWrapp>}\n    </>\n  );\n};\n\nexport default CategoriesList;\n","import { FC, useEffect, Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport MainContainer from 'components/MainContainer';\nimport CategoriesList from 'components/CategoriesByName/CategoriesList';\nimport ReusableTitle from 'components/ReusableComponents/ReusableTitle';\nimport Loader from 'components/Loader';\nimport { scrollToTop } from 'helpers/scrollToTop';\n\nconst CategoriesPage: FC = () => {\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    scrollToTop();\n  }, []);\n\n  return (\n    <MainContainer>\n      <ReusableTitle>{t('categoriesPage.title')}</ReusableTitle>\n      <CategoriesList />\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </MainContainer>\n  );\n};\n\nexport default CategoriesPage;\n"],"names":["category","useParams","categoryName","useState","tabValue","setTabValue","categories","setCategories","error","setError","isLoading","setIsLoading","navigate","useNavigate","t","useTranslation","useEffect","API","categoriesList","categoryCapitalize","toUpperCase","slice","indexOfCategory","indexOf","Error","message","toast","getAllCategories","length","lowercaseNavCategory","toLowerCase","Loader","Tabs","value","onChange","e","newCategory","variant","scrollButtons","sx","marginTop","backgroundColor","transition","overflowX","scrollbarWidth","display","gap","color","textTransform","minWidth","fontSize","fontFamily","fontWeight","lineHeight","borderColor","opacity","stroke","strokeWidth","map","idx","Tab","label","padding","NotFoundWrapp","scrollToTop","MainContainer","ReusableTitle","Suspense","fallback"],"sourceRoot":""}